{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antam\\\\OneDrive\\\\Documents\\\\GitHub\\\\final_fullstack_project\\\\client\\\\src\\\\CarList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarList = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [cars, setCars] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [makeFilter, setMakeFilter] = useState('');\n  const [modelFilter, setModelFilter] = useState('');\n  const [yearFilter, setYearFilter] = useState('');\n  const [newPage, setNewPage] = useState(1);\n  const pageSize = 30;\n\n  // Options for the dropdown filter\n  const filterOptions = [{\n    value: 'new',\n    label: 'New'\n  }, {\n    value: 'used',\n    label: 'Used'\n  }, {\n    value: 'electric',\n    label: 'Electric'\n  }, {\n    value: 'research',\n    label: 'Research'\n  }];\n\n  // State to track selected option\n  const [selectedFilter, setSelectedFilter] = useState(null);\n  useEffect(() => {\n    fetchCars();\n  }, [location.search, newPage]);\n  const fetchCars = () => {\n    const params = new URLSearchParams(location.search);\n    const searchTermParam = params.get('searchTerm') || '';\n    const makeParam = params.get('make') || '';\n    const modelParam = params.get('model') || '';\n    const yearParam = params.get('year') || '';\n    const pageParam = params.get('page') || 1;\n    setSearchTerm(searchTermParam);\n    setMakeFilter(makeParam);\n    setModelFilter(modelParam);\n    setYearFilter(yearParam);\n    setNewPage(pageParam);\n    const apiUrl = 'http://localhost:3001/api/cars/search';\n    const handleSearch = () => {\n      setNewPage(1);\n      updateURL();\n    };\n    const handleFilter = (make, model, year) => {\n      setNewPage(1);\n      setMakeFilter(make);\n      setModelFilter(model);\n      setYearFilter(year);\n      updateURL(1);\n    };\n    const handlePageChange = newPage => {\n      setNewPage(newPage);\n      updateURL();\n    };\n    const updateURL = newPage => {\n      const params = new URLSearchParams();\n      params.set('searchTerm', searchTerm);\n      params.set('make', makeFilter);\n      params.set('model', modelFilter);\n      params.set('year', yearFilter);\n      params.set('page', newPage);\n      navigate(`?${params.toString()}`);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(CarList, \"GvWBk7FQF2u9pFAMUeFs5JvzVHM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CarList;\nexport default CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","axios","Select","jsxDEV","_jsxDEV","CarList","_s","navigate","location","cars","setCars","searchTerm","setSearchTerm","makeFilter","setMakeFilter","modelFilter","setModelFilter","yearFilter","setYearFilter","newPage","setNewPage","pageSize","filterOptions","value","label","selectedFilter","setSelectedFilter","fetchCars","search","params","URLSearchParams","searchTermParam","get","makeParam","modelParam","yearParam","pageParam","apiUrl","handleSearch","updateURL","handleFilter","make","model","year","handlePageChange","set","toString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/antam/OneDrive/Documents/GitHub/final_fullstack_project/client/src/CarList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\n\r\nconst CarList = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [cars, setCars] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [makeFilter, setMakeFilter] = useState('');\r\n  const [modelFilter, setModelFilter] = useState('');\r\n  const [yearFilter, setYearFilter] = useState('');\r\n  const [newPage, setNewPage] = useState(1);\r\n  const pageSize = 30;\r\n\r\n  // Options for the dropdown filter\r\n  const filterOptions = [\r\n    { value: 'new', label: 'New' },\r\n    { value: 'used', label: 'Used' },\r\n    { value: 'electric', label: 'Electric' },\r\n    { value: 'research', label: 'Research' },\r\n  ];\r\n\r\n  // State to track selected option\r\n  const [selectedFilter, setSelectedFilter] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchCars();\r\n  }, [location.search, newPage]);\r\n\r\n  const fetchCars = () => {\r\n    const params = new URLSearchParams(location.search);\r\n    const searchTermParam = params.get('searchTerm') || '';\r\n    const makeParam = params.get('make') || '';\r\n    const modelParam = params.get('model') || '';\r\n    const yearParam = params.get('year') || '';\r\n    const pageParam = params.get('page') || 1;\r\n\r\n    setSearchTerm(searchTermParam);\r\n    setMakeFilter(makeParam);\r\n    setModelFilter(modelParam);\r\n    setYearFilter(yearParam);\r\n    setNewPage(pageParam);\r\n\r\n    const apiUrl = 'http://localhost:3001/api/cars/search';\r\n\r\n    const handleSearch = () => {\r\n      setNewPage(1);\r\n      updateURL();\r\n    };\r\n\r\n    const handleFilter = (make, model, year) => {\r\n      setNewPage(1);\r\n      setMakeFilter(make);\r\n      setModelFilter(model);\r\n      setYearFilter(year);\r\n      updateURL(1);\r\n    };\r\n\r\n    const handlePageChange = (newPage) => {\r\n      setNewPage(newPage);\r\n      updateURL();\r\n    };\r\n\r\n    const updateURL = (newPage) => {\r\n      const params = new URLSearchParams();\r\n      params.set('searchTerm', searchTerm);\r\n      params.set('make', makeFilter);\r\n      params.set('model', modelFilter);\r\n      params.set('year', yearFilter);\r\n      params.set('page', newPage);\r\n\r\n      navigate(`?${params.toString()}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* ... (rest of your code) */}\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default CarList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}