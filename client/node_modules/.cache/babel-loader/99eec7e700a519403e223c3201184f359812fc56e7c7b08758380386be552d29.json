{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antam\\\\OneDrive\\\\Documents\\\\GitHub\\\\final_fullstack_project\\\\client\\\\src\\\\CarList.jsx\",\n  _s = $RefreshSig$();\n// src/components/CarList.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarList = () => {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 30; // Set the desired number of results per page\n\n  useEffect(() => {\n    // Fetch all cars initially\n    fetchCars();\n  }, [currentPage]); // Re-fetch data when the currentPage changes\n\n  const fetchCars = () => {\n    // Fetch cars based on the search term and pagination\n    axios.get(`http://localhost:5000/api/cars/search?term=${searchTerm}&page=${currentPage}&pageSize=${pageSize}`).then(response => setCars(response.data)).catch(error => console.error('Error fetching cars:', error));\n  };\n  const handleSearch = () => {\n    setCurrentPage(1); // Reset to the first page when performing a new search\n    fetchCars();\n  };\n  const handleFilter = filterTerm => {\n    setCurrentPage(1); // Reset to the first page when applying a filter\n    // Fetch cars based on the selected filter term\n    axios.get(`http://localhost:5000/api/cars/filter?term=${filterTerm}`).then(response => setCars(response.data)).catch(error => console.error('Error filtering cars:', error));\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Car Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by make, model, or year\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFilter('Toyota'),\n        children: \"Filter Toyota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFilter('Honda'),\n        children: \"Filter Honda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cars.map(car => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${car.year} ${car.make} ${car.model} - $${car.price}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, car.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Page \", currentPage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CarList, \"SdLmLc6JZrTyJA+dHQn96PZ+TmM=\");\n_c = CarList;\nexport default CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CarList","_s","cars","setCars","searchTerm","setSearchTerm","currentPage","setCurrentPage","pageSize","fetchCars","get","then","response","data","catch","error","console","handleSearch","handleFilter","filterTerm","handlePageChange","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","car","year","make","model","price","id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/antam/OneDrive/Documents/GitHub/final_fullstack_project/client/src/CarList.jsx"],"sourcesContent":["// src/components/CarList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CarList = () => {\r\n  const [cars, setCars] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageSize = 30; // Set the desired number of results per page\r\n\r\n  useEffect(() => {\r\n    // Fetch all cars initially\r\n    fetchCars();\r\n  }, [currentPage]); // Re-fetch data when the currentPage changes\r\n\r\n  const fetchCars = () => {\r\n    // Fetch cars based on the search term and pagination\r\n    axios.get(`http://localhost:5000/api/cars/search?term=${searchTerm}&page=${currentPage}&pageSize=${pageSize}`)\r\n      .then(response => setCars(response.data))\r\n      .catch(error => console.error('Error fetching cars:', error));\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setCurrentPage(1); // Reset to the first page when performing a new search\r\n    fetchCars();\r\n  };\r\n\r\n  const handleFilter = (filterTerm) => {\r\n    setCurrentPage(1); // Reset to the first page when applying a filter\r\n    // Fetch cars based on the selected filter term\r\n    axios.get(`http://localhost:5000/api/cars/filter?term=${filterTerm}`)\r\n      .then(response => setCars(response.data))\r\n      .catch(error => console.error('Error filtering cars:', error));\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Car Listings</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by make, model, or year\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n      <div>\r\n        <button onClick={() => handleFilter('Toyota')}>Filter Toyota</button>\r\n        <button onClick={() => handleFilter('Honda')}>Filter Honda</button>\r\n        {/* Add more filter options as needed */}\r\n      </div>\r\n      <ul>\r\n        {cars.map(car => (\r\n          <li key={car.id}>\r\n            <p>{`${car.year} ${car.make} ${car.model} - $${car.price}`}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\r\n          Previous Page\r\n        </button>\r\n        <span> Page {currentPage} </span>\r\n        <button onClick={() => handlePageChange(currentPage + 1)}>\r\n          Next Page\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}